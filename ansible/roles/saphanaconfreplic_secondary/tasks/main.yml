---
- name: Check SAP HANA replication status on secondary node
  shell: "su - {{ hana_sid|lower }}adm -c 'hdbnsutil -sr_state --sapcontrol=1'"
  args:
    warn: false
  register: repl_status_secondary
  changed_when: False
  when: hana_sid is defined

- name: Set SAP HANA replication status variable for secondary node
  set_fact:
    replication_secondary: "yes"
  when: repl_status_secondary.stdout.find('operation mode=logreplay') != -1 and repl_status_secondary.stdout.find('mode=async') != -1

- name: Check for HANA Instance status
  shell: |
      /usr/sap/hostctrl/exe/sapcontrol -nr {{ hana_sysno }} -function GetSystemInstanceList
  args:
    executable: /bin/bash
  become: true
  become_user: "{{ hana_sid | lower }}adm"
  register: getinstancestatus_output
  changed_when: False
  when: replication_secondary is not defined

- name: Set variable hanastarted
  set_fact:
    hanastarted: yes
  when: 'replication_secondary is not defined and "GRAY" not in getinstancestatus_output.stdout'

- name: Replace the holders in the output with the appropriate values
  set_fact:
    replication_params: "{{ (replication_params | regex_replace(replace_item.old_val, replace_item.new_val)) }}"
  loop:
    - { old_val: '<hdb_host_primary>', new_val: "{{ hdb_host_primary }}" }
    - { old_val: '<hdb_hostname_primary>', new_val: "{{ hdb_hostname_primary }}" }
  loop_control:
    loop_var: replace_item
  changed_when: False
  when: hanastarted is defined

- name: Check the status of all paramaters required for SAP HANA SYSTEMDB
  shell: |
    export HISTCONTROL=ignorespace
     su - {{ hana_sid|lower }}adm -c "hdbsql -d SYSTEMDB -u SYSTEM -p \"{{ hana_main_password }}\" -i {{ hana_sysno }} \"select key, value from M_CONFIGURATION_PARAMETER_VALUES where file_name = 'global.ini' and layer_name = 'SYSTEM' and section = '{{ p_system.section }}' and key = '{{ p_system.param }}' and value = '{{ p_system.value }}'\""
  args:
    warn: false
  loop: "{{ replication_params | list }}"
  loop_control:
    loop_var: p_system
  register: systemdb_param_statuss
  changed_when: False
  no_log: True
  when: hanastarted is defined

- name: Create the list of parameters which are not set or are incorrectly set
  set_fact:
    systemdb_param_to_sets: "{{ systemdb_param_to_sets|default([]) + [p_systemtoset.p_system] }}"
  loop: "{{ systemdb_param_statuss.results | list }}"
  loop_control:
    loop_var: p_systemtoset
  when: '(systemdb_param_statuss is defined) and (p_systemtoset is mapping) and (p_systemtoset.stdout is defined) and ("KEY,VALUE\n0 rows selected" in p_systemtoset.stdout)'
  no_log: True

- name: Display the list of parameters to be set
  debug:
    var: systemdb_param_to_sets
  when: systemdb_param_to_sets is defined

- name: Set the parameters for SAP HANA SYSTEMDB in order to enable the replication
  shell: su - {{ hana_sid|lower }}adm -c "hdbsql -d SYSTEMDB -u SYSTEM -p \"{{ hana_main_password }}\" -i {{ hana_sysno }} \"ALTER SYSTEM ALTER CONFIGURATION ('global.ini', 'SYSTEM') SET ('{{ item_repl.section }}' , '{{ item_repl.param }}') = '{{ item_repl.value }}' WITH RECONFIGURE\""
  args:
    warn: false
  loop: "{{ systemdb_param_to_sets | list }}"
  loop_control:
    loop_var: item_repl
  no_log: True
  when: systemdb_param_to_sets is defined
...
